service: INDRA-RETO-RIMAC
frameworkVersion: '3'
configValidationMode: error
deprecationNotificationMode: error
useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage,'DESA'}
  region: us-east-2
  timeout: 300
  memorySize: 512
  versionFunctions: false
  logRetentionInDays: 30
  architecture: arm64

  tracing:
    lambda: true

  environment:
    SNS_SCHEDULE_ARN_PE: ""
    SNS_SCHEDULE_ARN_CL: ""
    SQS_SCHEDULE_PE: sqsSchedulePe
    SQS_SCHEDULE_CL: sqsScheduleCl
    DDB_APPOINTMENT: appointment
    DDB_SCHEDULE: schedule
    RDS_MYSQL_CONECTION: "{ host: , user: , password: 123 }"

custom:
  xyz: xyz

plugins:
  - serverless-offline
  - serverless-plugin-typescript

package:
  individually: true

functions:
  appointment:
    handler: src/appointment/index.handler
    events:
      - http:
          path: /V1/appointment
          method: post
          integration: lambda
      - sqs:
          arn: arn:aws:sqs:region:us-east-2:sqsChangeState
          batchSize: 10
          maximumBatchingWindow: 60
          #functionResponseType: ReportBatchItemFailures
  appointment_pe:
    handler: src/appointment/index.handler
    events:
      - sqs:
          arn: arn:aws:sqs:region:us-east-2:sqsSchedulePe
          batchSize: 10
          maximumBatchingWindow: 60
          #functionResponseType: ReportBatchItemFailures
  appointment_cl:
    handler: src/appointment/index.handler
    events:
      - sqs:
          arn: arn:aws:sqs:region:us-east-2:sqsScheduleCl
          batchSize: 10
          maximumBatchingWindow: 60
          #functionResponseType: ReportBatchItemFailures
resources:
  Resources:
    topicPe:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: topicPe
        ContentBasedDeduplication: false
        FifoTopic: true
    topicCL:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: topicCL
    sqsChangeState:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "sqsChangeState"
        FifoQueue: True
    sqsSchedulePe:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqsSchedulePe
        FifoQueue: True
    sqsScheduleCl:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqsScheduleCl
        FifoQueue: True
    SnsSubscriptionPe:
      Type: AWS::SNS::Subscrition
      Properties:
        Protocol: sqs
        Endpoint:
          Fn::GetAtt: sqsSchedulePe.Arn
    SnsSubscriptionCl:
      Type: AWS::SNS::Subscrition
      Properties:
        Protocol: sqs
        Endpoint:
          Fn::GetAtt: sqsSchedulecl.Arn
    EventRule: 
      Type: AWS::Events::Rule
      Properties: 
        Description: "EventRule"
        EventPattern: 
          account: 
            - !Sub '${AWS::AccountId}'
          source:
            - "demo.sqs"
        Targets: 
          - Arn: !GetAtt sqsChangeState.Arn
            Id: "SQSqueue"
    EventBridgeToToSqsPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: SQS:SendMessage
            Resource:  !GetAtt sqsChangeState.Arn
        Queues:
          - Ref: MySqsQueue
    appointment:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: appointment
        AttributeDefinitions:
          - AttributeName: insuredId
            AttributeType: S
          - AttributeName: scheduleId
            AttributeType: N
          - AttributeName: countryISO
            AttributeType: S
        KeySchema:
          - AttributeName: insuredId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    schedule:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: schedule
        AttributeDefinitions:
          - AttributeName: scheduleId
            AttributeType: N
          - AttributeName: centerId
            AttributeType: N
          - AttributeName: specialtyId
            AttributeType: N
          - AttributeName: medicId
            AttributeType: N
          - AttributeName: date
            AttributeType: s
          - AttributeName: state
            AttributeType: S
        KeySchema:
          - AttributeName: scheduleId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
#   Outputs:
#      topicPeArn:
#        Description: ARN of topicPe
#        Value: 
#          "Fn::GetAtt": ["topicPe", "Arn"]
#        Export:
#          Name: topicPeArn
#      topicClArn:
#        Description: ARN of topicCl
#        Value: 
#          "Fn::GetAtt": ["topicCl", "Arn"]
#        Export:
#          Name: topicClArn
